<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
       			http://www.springframework.org/schema/beans 
           		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           		http://www.springframework.org/schema/context
           		http://www.springframework.org/schema/context/spring-context-3.0.xsd
          		 http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

	<!-- spring security에서 context-servlet의 어노테이션 주입이 되지 않는 문제 해결 -->
	<context:component-scan
		base-package="com.dzpay.admin">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- @Secured 어노테이션 설정 -->
	<security:global-method-security
		secured-annotations="enabled" proxy-target-class="true" />

	<!-- 로그인, 로그아웃 및 권한별 접근 url 설정. -->
	<security:http auto-config="false" use-expressions="true"
		authentication-manager-ref="authenticationManager" create-session = "never">
		
		<security:intercept-url pattern="/admin/**.do"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_SITE', 'ROLE_BW_DEV', 'ROLE_WEHAGO')" 
			/>

		<security:intercept-url
			pattern="/admin/master/**.do" access="hasRole('ROLE_ADMIN')" />

		<security:intercept-url pattern="/site/**.do"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_SITE', 'ROLE_BW_DEV', 'ROLE_WEHAGO')" />

		<!-- url별 접근 권한 설정 1. 로그인 2. 가맹점 등록 -->
		<security:intercept-url pattern="/init/**"
			access="permitAll" />

		<security:intercept-url pattern="/error"
			access="permitAll" />

		<security:intercept-url pattern="/terms"
			access="permitAll" />

		<security:intercept-url pattern="/error/**"
			access="permitAll" />

		<security:intercept-url pattern="/mall/doc/**"
			access="permitAll" />

		<!-- 로그인 설정 -->
		<security:form-login login-page="/init/login.do"
			username-parameter="id" password-parameter="password"
			default-target-url="/admin/main.do"
			login-processing-url="/init/proc/login.do"
			authentication-failure-url="/init/login-fail.do" 
			authentication-success-handler-ref = "loginSuccessHandler"
			always-use-default-target="true"
			/>
	
		<security:custom-filter ref="jwtFilter"
			before="FORM_LOGIN_FILTER" />

		<!-- 로그아웃 설정 -->
		<security:logout logout-url="/init/proc/logout.do"
			logout-success-url="/init/login.do"
			delete-cookies="JSESSIONID, X-AUTH-TOKEN" />

		<security:session-management
			invalid-session-url="/init/login.do">
			<security:concurrency-control
				max-sessions="1" expired-url="/init/login/session-over.do" />
		</security:session-management>

		<security:access-denied-handler
			ref="accessDeniedHandler" />

	</security:http>

	<!-- DB에서 불러올 사용자 정보 및 권한 설정 -->
	<security:authentication-manager
		alias="authenticationManager">
		<security:authentication-provider
			ref="customAuthenticationProvider" />	 <!-- 권한 설정할 커스텀 Bean -->
		<security:authentication-provider
			user-service-ref="customUserDetailService"> <!-- 사용자 정보 설정할 커스텀 Bean -->
			<security:password-encoder
				ref="passwordEncoder"> <!-- 로그인 비밀번호 암호화 인코딩 Bean -->
				<security:salt-source ref="saltSource" /> <!-- 로그인 비밀번호 암호화 salt Bean -->
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>


	<!-- 권한 설정할 커스텀 Bean -->
	<bean id="customAuthenticationProvider"
		class="com.dzpay.admin.security.CustomAuthenticationProvider">
	</bean>

	<bean id="customUserDetailService"
		class="com.dzpay.admin.security.CustomUserDetailService">
	</bean>

	<!-- 로그인 암호 인코딩 Bean -->
	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

	<!-- 로그인 비밀번호 암호화 salt Bean -->
	<bean id="saltSource"
		class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<property name="userPropertyToUse" value="douzone" />
	</bean>

	<bean id="accessDeniedHandler"
		class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<property name="errorPage"
			value="/WEB-INF/views/error/403.jsp" />
	</bean>
	
	<bean id = "loginSuccessHandler" class = "com.dzpay.admin.security.LoginSuccessHandler" >
		<property name="loginidname" value="id"></property>
		<property name="defaultUrl" value = "/admin/main.do"></property>
	</bean>
	
	<bean id="jwtFilter"
		class="com.dzpay.admin.common.filter.JwtAuthenticationFilter">
		<constructor-arg ref = "authenticationManager"/>
		<constructor-arg type="java.lang.String">
			<value>/admin/main.do</value>
		</constructor-arg>
	</bean>

</beans>